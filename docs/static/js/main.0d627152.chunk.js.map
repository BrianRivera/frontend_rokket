{"version":3,"sources":["utils/contants.js","functions/personaje.js","hooks/useFetch.js","hooks/useForm.js","components/personajes/ItemFormLista.jsx","components/personajes/FormLista.jsx","components/lista/Detalle.jsx","components/lista/Fila.jsx","components/lista/Lista.jsx","components/personajes/Personajes.jsx","DragonBallApp.jsx","index.jsx"],"names":["URL_BACKEND","insertPersonaje","body","formdata","setPersonajeState","a","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","then","response","json","result","ok","Swal","fire","icon","title","text","personajes","name","showConfirmButton","timer","insertImage","_id","dataImg","image","nombreArchivoFinal","refreshStatePersonaje","err","message","catch","error","deletePersonaje","id","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","denyButtonText","isConfirmed","personaje","type","e","newPersonaje","data","filter","r","useFetch","url","isMounted","useRef","useState","loading","state","setState","useEffect","current","resp","reverse","useForm","initialState","values","setValue","reset","handleInputChange","target","value","ItemFormLista","description","handleDeleteItem","className","onClick","width","height","viewBox","fill","xmlns","fillRule","d","FormLista","Form","itemsState","setitemsState","i","map","index","container","key","toString","onChange","cols","rows","options","op","preventDefault","find","length","Detalle","setvista","seleccion","vista","race","skills","src","alt","style","Fila","handleDeletePersonaje","handleDetalle","Lista","memo","colSpan","p","Personajes","dataRace","dataPersonaje","default","imageState","setImageState","onSubmit","file","URLSearchParams","JSON","stringify","FormData","nameFile","document","querySelector","required","disabled","items","files","accept","URL","createObjectURL","DragonBallApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0d627152.chunk.js","sourcesContent":["// export const URL_BACKEND = 'http://localhost:3001';\r\nexport const URL_BACKEND = 'https://backendrokkettest.herokuapp.com';","import Swal from \"sweetalert2\";\r\nimport { URL_BACKEND } from \"../utils/contants\";\r\n//funcion de insercion de personaje\r\nexport const insertPersonaje = async(body, formdata, setPersonajeState) => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n    //config de parametros y envio de datos para la peticion de ingreso\r\n    var requestOptions = {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: body,\r\n        redirect: \"follow\",\r\n    };\r\n\r\n    fetch(`${URL_BACKEND}/personaje`, requestOptions)\r\n        .then((response) => response.json())\r\n        .then(async(result) => {\r\n            if (result.ok) {\r\n                Swal.fire({\r\n                    icon: \"success\",\r\n                    title: \"Listo\",\r\n                    text: `Personaje '${result.personajes.name}' ingresado exitosamente `,\r\n                    showConfirmButton: false,\r\n                    timer: 2000,\r\n                });\r\n                //llama a la funcion de insercion de imagenes\r\n                const dataImg = await insertImage(result.personajes._id, formdata);\r\n                //actualiza el dato de 'image' en el nuevo personaje\r\n                result.personajes.image = dataImg.nombreArchivoFinal;\r\n                // llama a la funcion de actualizacion de lista de pesonajes\r\n                refreshStatePersonaje(setPersonajeState, result.personajes, \"insert\");\r\n            } else {\r\n                Swal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Oops...\",\r\n                    text: `Error al ingresar el personaje: ${result.err.message}`,\r\n                });\r\n            }\r\n        })\r\n        .catch((error) =>\r\n            Swal.fire({\r\n                icon: \"error\",\r\n                title: \"Oops...\",\r\n                text: `Error al ingresar el personaje: ${error}`,\r\n            })\r\n        );\r\n};\r\n//funcion de eliminacion de imagenes\r\nexport const deletePersonaje = async(id, setPersonajeState) => {\r\n    Swal.fire({\r\n        title: \"Seguro desea eliminar este personaje?\",\r\n        text: \"El personaje se eliminara de forma permanente!\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Si, Eliminar!\",\r\n        denyButtonText: `Cancelar`,\r\n    }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            fetch(`${URL_BACKEND}/personaje/${id}`, { method: \"DELETE\" })\r\n                .then((response) => response.json())\r\n                .then((result) => {\r\n                    if (result.ok) {\r\n                        Swal.fire({\r\n                            icon: \"success\",\r\n                            title: \"Listo\",\r\n                            text: `Personaje eliminado`,\r\n                            showConfirmButton: false,\r\n                            timer: 2000,\r\n                        });\r\n                        //actualiza la lista sin el personaje eliminado\r\n                        refreshStatePersonaje(setPersonajeState, id, \"delete\");\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: \"error\",\r\n                            title: \"Oops...\",\r\n                            text: `Error al eliminar el personaje: ${result.err.message}`,\r\n                        });\r\n                    }\r\n                })\r\n                .catch((error) =>\r\n                    Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"Oops...\",\r\n                        text: `Error al eliminar el personaje: ${error}`,\r\n                    })\r\n                );\r\n        }\r\n    });\r\n};\r\n//actualizacion de lista para ingresar y/o eliminar\r\nconst refreshStatePersonaje = (setPersonajeState, personaje, type) => {\r\n    setPersonajeState((e) => {\r\n        let newPersonaje;\r\n        switch (type) {\r\n            case \"insert\":\r\n                newPersonaje = [personaje, ...e.data.personajes];\r\n                return {...e, data: {...e.data, personajes: newPersonaje } };\r\n            case \"delete\":\r\n                newPersonaje = [\r\n                    ...e.data.personajes.filter((r) => r._id !== personaje),\r\n                ];\r\n                return {...e, data: {...e.data, personajes: newPersonaje } };\r\n\r\n            default:\r\n                break;\r\n        }\r\n    });\r\n};\r\n//insercion de imagenes\r\nconst insertImage = async(id, image) => {\r\n    var requestOptions = {\r\n        method: \"PUT\",\r\n        body: image,\r\n        redirect: \"follow\",\r\n    };\r\n\r\n    const response = await fetch(`${URL_BACKEND}/upload/${id}`, requestOptions);\r\n    return await response.json();\r\n};","import { useState, useEffect, useRef } from 'react'\r\n//https://breakingbadapi.com/api/quotes/1\r\n\r\n//funcion de peticion get al backend\r\nexport const useFetch = (url) => {\r\n    const isMounted = useRef(true);\r\n    const [state, setState] = useState({ data: null, loading: true, error: null })\r\n\r\n    useEffect(() => {\r\n\r\n        //el return es cuando el componente se desmonta\r\n        return () => {\r\n            isMounted.current = false;\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setState({\r\n            loading: true,\r\n            error: null,\r\n            data: null\r\n        });\r\n\r\n        fetch(url)\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                (data.personajes) && data.personajes.reverse();\r\n                if (isMounted.current) {\r\n                    setState({\r\n                        loading: false,\r\n                        error: null,\r\n                        data\r\n                    });\r\n                }\r\n            }).catch(() => {\r\n                setState({\r\n                    data: null,\r\n                    loading: false,\r\n                    error: 'no se pudo cargar la info'\r\n                })\r\n            });\r\n\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, [url])\r\n\r\n    return [state, setState];\r\n\r\n}","import { useState } from 'react'\r\n\r\n//funcion que maneja el valor de los formularios\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValue] = useState(initialState)\r\n\r\n    const reset = () => {\r\n        setValue(initialState);\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValue({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}","import React from \"react\";\r\n\r\nexport const ItemFormLista = ({name='',description='',handleDeleteItem}) => {\r\n\r\n//item de la lista de habilidades\r\n  return (\r\n    <div className=\"col-sm-12 itemPoder\">\r\n      <div className=\"row\">\r\n        <h6 className=\"col-sm-11\">{name}</h6>\r\n        <svg\r\n          onClick={()=>handleDeleteItem(name)}\r\n          width=\"1em\"\r\n          height=\"1em\"\r\n          viewBox=\"0 0 16 16\"\r\n          className=\"col-sm-1 bi bi-trash-fill\"\r\n          fill=\"currentColor\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\"\r\n          />\r\n        </svg>\r\n      </div>\r\n      <p>\r\n        {description}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ItemFormLista } from \"./ItemFormLista\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\nexport const FormLista = ({\r\n  title = \"\",\r\n  Form = [],\r\n  itemsState,\r\n  setitemsState,\r\n}) => {\r\n  //funcion que maneja parte del formulario de ingreso,\r\n  //controla la actualizacion del valor de los datos name y description de habilidades\r\n  const [values, handleInputChange, reset] = useForm();\r\n\r\n  //ingreso de habilidades/verificacion de habilidad unica\r\n  const handleAddHabilitie = (e) => {\r\n    e.preventDefault();\r\n    if (!values.name || !values.description)\r\n      return Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text:\r\n          \"Por favor lleve el campo nombre y descripcion para agregar una habilidad\",\r\n      });\r\n    if (itemsState.find((e) => e.name === values.name)) {\r\n      reset();\r\n      return Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: \"Habilidad repetida\",\r\n      });\r\n    }\r\n    reset();\r\n    return setitemsState((i) => [values, ...i]);\r\n  };\r\n\r\n  //quita la habilidad elegida\r\n  const handleDeleteItem = (name) => {\r\n    return setitemsState((i) => i.filter((e) => e.name !== name));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h5>{title}</h5>\r\n\r\n      {Form &&\r\n        Form.map((r, index) => {\r\n          switch (r.container) {\r\n            case \"input\":\r\n              return (\r\n                <div key={index.toString() + \"i\"} className=\"col-sm-12\">\r\n                  {r.name}\r\n                  <input\r\n                    type=\"text\"\r\n                    name={r.name}\r\n                    className=\"inputForm\"\r\n                    onChange={handleInputChange}\r\n                    value={values[r.name] ? values[r.name] : \"\"}\r\n                  />\r\n                </div>\r\n              );\r\n            case \"textarea\":\r\n              return (\r\n                <div key={index.toString() + \"t\"} className=\"col-sm-12\">\r\n                  {r.name}\r\n                  <textarea\r\n                    name={r.name}\r\n                    cols=\"30\"\r\n                    rows=\"10\"\r\n                    className=\"inputForm\"\r\n                    onChange={handleInputChange}\r\n                    value={values[r.name] ? values[r.name] : \"\"}\r\n                  ></textarea>\r\n                </div>\r\n              );\r\n            case \"select\":\r\n              return (\r\n                <div className=\"col-sm-12\">\r\n                  <select\r\n                    name={r.name}\r\n                    className=\"inputForm\"\r\n                    onChange={handleInputChange}\r\n                  >\r\n                    {r.options.map((op, i) => (\r\n                      <option\r\n                        value={values[op.name] ? values[op.name] : \"\"}\r\n                      ></option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              );\r\n            default:\r\n              return (\r\n                <div className=\"col-sm-12\">\r\n                  <h3>No conocida</h3>\r\n                </div>\r\n              );\r\n          }\r\n        })}\r\n      <div className=\"col-sm-12\">\r\n        <button onClick={handleAddHabilitie} className=\"btnAddSkill\">\r\n          Agregar habilidad\r\n        </button>\r\n      </div>\r\n      <div className=\"col-sm-12\">\r\n        <hr />\r\n        <h5>Lista {title}</h5>\r\n        <hr />\r\n\r\n        <div className=\"listPoderes\">\r\n          {itemsState.length > 0 ? (\r\n            itemsState.map((r, i) => (\r\n              <ItemFormLista\r\n                key={i + \"hab\"}\r\n                name={r.name}\r\n                description={r.description}\r\n                handleDeleteItem={handleDeleteItem}\r\n              ></ItemFormLista>\r\n            ))\r\n          ) : (\r\n            <p>sin habilidades</p>\r\n          )}\r\n        </div>\r\n        <br />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { URL_BACKEND } from \"../../utils/contants\";\r\n\r\nexport const Detalle = ({ setvista, vista: { seleccion } }) => {\r\n  //vista de detalles\r\n  \r\n  //retorna a la tabla\r\n  const handleReturn = () => {\r\n    setvista((e) => ({ vista: !e.vista, seleccion: {} }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <hr />\r\n      <button onClick={handleReturn} className=\"btnDetalle\">\r\n        atras\r\n      </button>\r\n      <hr />\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-4\">\r\n          <h5>Personaje</h5>\r\n          <p>Nombre: {seleccion.name}</p>\r\n          <p>raza: {seleccion.race.name}</p>\r\n          <p>habilidad raza: {seleccion.race.skills}</p>\r\n          <img\r\n            src={`${URL_BACKEND}/imagen/`+seleccion.image}\r\n            className=\"img-fluid\"\r\n            alt=\"imgPersonaje\"\r\n          ></img>\r\n        </div>\r\n        <div className=\"col-sm-8\">\r\n          <h5>Habilidades</h5>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th style={{width:'200px'}}>Habilidad</th>\r\n                <th>Descripcion</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {seleccion.skills.map((r, i) => (\r\n                <tr key={r.name.toString() + i}>\r\n                  <td>{r.name}</td>\r\n                  <td>{r.description}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { URL_BACKEND } from \"../../utils/contants\";\r\n\r\nexport const Fila = ({_id,name,skills,image,race,handleDeletePersonaje, handleDetalle}) => {\r\n  //crea las filas de la tabla\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <img\r\n          src={`${URL_BACKEND}/imagen/${image}`}\r\n          className=\"img-fluid\"\r\n          alt=\"imgPersonaje\"\r\n        ></img>\r\n      </td>\r\n      <td>{name}</td>\r\n      <td>{race.name}</td>\r\n      <td>{skills.length}</td>\r\n      <td>\r\n        <button  onClick={()=>handleDeletePersonaje(_id)} className=\"btnDelete\">\r\n          x\r\n        </button>\r\n      </td>\r\n      <td>\r\n        <button onClick={()=>handleDetalle(_id)} className=\"btnAddSkill\">\r\n          Ver\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n","import React, { memo, useState } from \"react\";\r\nimport { deletePersonaje } from \"../../functions/personaje\";\r\nimport { Detalle } from \"./Detalle\";\r\nimport { Fila } from \"./Fila\";\r\n\r\nexport const Lista = memo(({loading,data,error,setPersonajeState}) => {\r\n  \r\n  //lista personajes\r\n  //estado vista de tabla con personajes o detalle de uno\r\n  const [vista, setvista] = useState({vista:true,seleccion:{}});\r\n\r\n    //elimina un personaje\r\n   const handleDeletePersonaje = (id) => {\r\n     deletePersonaje(id,setPersonajeState);\r\n    };\r\n    //actualiza el estado para cambiar de vista\r\n    const handleDetalle = (id) =>{\r\n      const seleccion = data.personajes.find((r)=>r._id === id);\r\n      setvista({vista:false,seleccion:seleccion});\r\n    };\r\n    \r\n\r\n\r\n  return (\r\n    <div>\r\n      {(vista.vista)?(\r\n      <>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th className=\"tr-img\">Imagen</th>\r\n            <th>Nombre</th>\r\n            <th>Raza</th>\r\n            <th>Numero skills</th>\r\n            <th>Eliminar</th>\r\n            <th>Ver</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            {\r\n                (!loading && !error)\r\n                ?\r\n                (data.personajes.length===0)?(<tr><td colSpan=\"6\">Sin personajes</td></tr>):\r\n                data.personajes.map(p=>(\r\n                    <Fila\r\n                    {...p}\r\n                    key={p._id.toString()}\r\n                    handleDeletePersonaje={handleDeletePersonaje}\r\n                    handleDetalle={handleDetalle}\r\n                    ></Fila>\r\n                )):(<tr><td colSpan=\"6\">Cargando...</td></tr>)\r\n            }\r\n\r\n        </tbody>\r\n      </table>\r\n      <br />\r\n      </>\r\n      ):(<Detalle setvista={setvista} vista={vista}></Detalle>)}\r\n    </div>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { insertPersonaje } from \"../../functions/personaje\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { FormLista } from \"./FormLista\";\r\nimport { URL_BACKEND } from \"./../../utils/contants\";\r\nimport \"./../styles.scss\";\r\nimport { Lista } from \"../lista/Lista\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const Personajes = () => {\r\n  //carga inicial de razas para las opciones del select\r\n  const [dataRace] = useFetch(`${URL_BACKEND}/raza`);\r\n\r\n  //carga inicial de personajes\r\n  const [dataPersonaje, setPersonajeState] = useFetch(\r\n    `${URL_BACKEND}/personaje`\r\n  );\r\n  //estado que maneja las habilidades de el nuevo personaje\r\n  const [itemsState, setitemsState] = useState([]);\r\n\r\n  //estado qe maneja las imagenes\r\n  const [imageState, setImageState] = useState({\r\n    default:\r\n      \"https://vignette.wikia.nocookie.net/dragonball/images/3/35/Esfera_del_dragon_4_estrellas.png/revision/latest?cb=20140105064853&path-prefix=es\",\r\n  });\r\n\r\n  //funcion que maneja parte del formulario de ingreso,\r\n  //controla la actualizacion del valor de los datos nombre y raza\r\n  const [values, handleInputChange, reset] = useForm({\r\n    name: \"\",\r\n    race: \"\",\r\n  });\r\n  const { name, race } = values;\r\n\r\n  //array con parametros para la creacion de formulario de habilidades\r\n  const formHabilidades = [\r\n    {\r\n      name: \"name\",\r\n      container: \"input\",\r\n      type: \"text\",\r\n    },\r\n    {\r\n      name: \"description\",\r\n      container: \"textarea\",\r\n      type: \"text\",\r\n    },\r\n  ];\r\n\r\n  //ingreso de nuevo personaje junto con su imagen\r\n  const handleSubmitPersonaje = (e) => {\r\n    e.preventDefault();\r\n    if (!imageState.file || imageState.file === \"\")\r\n      return Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: `Debe de seleccionar una imagen`,\r\n      });\r\n\r\n    const body = new URLSearchParams();\r\n    body.append(\"name\", name);\r\n    body.append(\"race\", race);\r\n    body.append(\"skills\", JSON.stringify(itemsState));\r\n    body.append(\"image\", \"I1\");\r\n\r\n    const formdata = new FormData();\r\n    formdata.append(\"archivo\", imageState.file, imageState.nameFile);\r\n    insertPersonaje(body, formdata, setPersonajeState);\r\n\r\n    //limpia los campos\r\n    setImageState({ default: imageState.default });\r\n    reset();\r\n    setitemsState([]);\r\n    document.querySelector(\"#fileInput\").value = \"\";\r\n  };\r\n\r\n  //maneja los cambios el el boton de imagen\r\n  const handleFile = (e) => {\r\n    const file = e.target.files[0];\r\n    const nameFile = e.target.value;\r\n    file\r\n      ? setImageState((e) => ({ ...e, file, nameFile }))\r\n      : setImageState({ default: imageState.default });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container container_app\">\r\n      <div className=\"row base_container\">\r\n        <h3>Ingrese personaje</h3>\r\n        <div className=\"col-sm-6\">\r\n          <hr />\r\n          <h5>Datos personaje</h5>\r\n          <form onSubmit={handleSubmitPersonaje}>\r\n            Nombre\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              className=\"inputForm\"\r\n              onChange={handleInputChange}\r\n              value={name}\r\n              required\r\n            />\r\n            Raza\r\n            <select\r\n              name=\"race\"\r\n              className=\"inputForm\"\r\n              onChange={handleInputChange}\r\n              value={race}\r\n              required\r\n            >\r\n              <option value=\"\" disabled></option>\r\n              {!dataRace.loading && !dataRace.error ? (\r\n                dataRace.data.ok &&\r\n                dataRace.data.race.map((r) => (\r\n                  <option key={r._id.toString()} value={r._id}>\r\n                    {r.name}\r\n                  </option>\r\n                ))\r\n              ) : (\r\n                <option value=\"\" disabled>\r\n                  Cargando..\r\n                </option>\r\n              )}\r\n            </select>\r\n            <div className=\"row newSkillsContainer\">\r\n              <FormLista\r\n                title=\"Habilidades\"\r\n                Form={formHabilidades}\r\n                items={[]}\r\n                itemsState={itemsState}\r\n                setitemsState={setitemsState}\r\n              ></FormLista>\r\n            </div>\r\n            <button className=\"btnSave\">Guardar</button>\r\n          </form>\r\n          <br />\r\n        </div>\r\n        <div className=\"col-sm-6\">\r\n          <hr />\r\n          <h5>Imagen</h5>\r\n          <br />\r\n          <input\r\n            type=\"file\"\r\n            name=\"image\"\r\n            className=\"form-control\"\r\n            onChange={handleFile}\r\n            id=\"fileInput\"\r\n            accept=\"image/*\"\r\n          />\r\n          <img\r\n            src={\r\n              !imageState.file || imageState.file === \"\"\r\n                ? imageState.default\r\n                : URL.createObjectURL(imageState.file)\r\n            }\r\n            className=\"img-fluid\"\r\n            alt=\"imgPersonaje\"\r\n          ></img>\r\n          <br />\r\n          <br />\r\n        </div>\r\n        <div className=\"col-sm-12 listaYDetalle\">\r\n          <Lista\r\n            {...dataPersonaje}\r\n            setPersonajeState={setPersonajeState}\r\n          ></Lista>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Personajes } from \"./components/personajes/Personajes\";\r\n\r\nexport const DragonBallApp = () => {\r\n  return (\r\n    <>\r\n      <Personajes></Personajes>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { DragonBallApp } from \"./DragonBallApp\";\r\n\r\nReactDOM.render(<DragonBallApp />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}